#!/bin/bash

PREFIX=$(dirname $0)

function usage () {
    echo "Usage:"
    echo "  $0 [options]"
    echo "Options:"
    echo -ne "  --start\n\tStart SDI.\n"
    echo -ne "  --stop\n\tStop SDI\n"
    echo -ne "  --close=host\n\tClose the tunnel of the host\n"
    echo -ne "  --restart\n\tRestart SDI\n"
    echo -ne "  --cleardata\n\tClear all data files\n"
    echo -ne "  --container=/full/patch/folder/container.tar.gz\n\tSend and execute a container\n"
    echo -ne "  --status=TICKET\n\tShow information about the execution of the container\n"
    echo -ne "  --sync-data\n\tSyncronize fast data dir with data dir\n"
    echo -ne "  --sendimage=/full/patch/folder/image.tar.gz\n\tSend a docker image and install in all hosts\n"
    echo -ne "  --senddockerfile=/full/patch/folder/Dockerfile\n\tSend a docker file to generate a image and install in all hosts\n"
}

TEMP=$(getopt -o hsScR \
       --long 'help,start,stop,close:,restart,sync-data,cleardata,sendimage:,container:,status:,senddockerfile:' \
       -n 'sdictl' -- "$@")

eval set -- "$TEMP"

while true; do
    case "$1" in
        --start)
            bash $PREFIX/launchsdi.sh
            break ;;
        --stop)
            bash $PREFIX/sync.sh
            bash $PREFIX/launchsditunnel.sh --killall
            break ;;
        --restart)
            bash $PREFIX/sync.sh
            bash $PREFIX/launchsditunnel.sh --killall
            bash $PREFIX/launchsdi.sh
            break ;;
        --close)
            bash $PREFIX/launchsditunnel.sh --kill="$2"
            break ;;
        --cleardata)
            rm -r data/*
            rm -r /tmp/sdi/*
            break ;;
        --container)
            bash $PREFIX/sendcontainer.sh --container="$2"
            break ;;
        --status)
            bash $PREFIX/status.sh --ticket="$2"
            break ;;
        --sendimage)
            # CONTINUAR AQUI
            #printf "envia imagem $2"
            bash $PREFIX/sendimage.sh --image="$2"
            break ;;
        --senddockerfile)
            # CONTINUAR AQUI
            printf "envia dockerfile $2"
            break ;;
        --sync-data)
            bash $PREFIX/sync.sh
            break ;;
        *)
            usage
            break ;;
    esac
done
